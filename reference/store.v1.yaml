openapi: 3.0.0
info:
  title: store
  version: '1.0'
  contact:
    name: Christophe Lallement
    email: christophe.lallement@gmail.com
  description: Store mutual aid goods and services
servers:
  - url: 'http://localhost:3000'
paths:
  '/assets/{asset_id}':
    parameters:
      - schema:
          type: string
        name: asset_id
        in: path
        description: id of the asset
        required: true
    get:
      summary: Get specific asset
      tags:
        - Assets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./asset_data.v1.yaml
        '404':
          description: Not Found
      operationId: get-assets-asset_id
      description: Retrieve informations about this asset
    put:
      summary: Update specific asset
      operationId: put-assets-asset_id
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./asset_data.v1.yaml
      description: Update informations about this asset
      tags:
        - Assets
    delete:
      summary: Delete specific asset
      operationId: delete-assets-asset_id
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      description: Remove this asset from the store
      tags:
        - Assets
  '/users/{user_id}':
    parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true
        description: id of the user
    get:
      summary: Get specific user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./user_data.v1.yaml
        '404':
          description: Not Found
      operationId: get-users-user_id
      description: Retrieve informations about this user
      tags:
        - Users
    put:
      summary: Update specific user
      operationId: put-users-user_id
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./user_data.v1.yaml
      description: Update informations about this user
      tags:
        - Users
    delete:
      summary: Delete specific user
      operationId: delete-users-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./user.v1.yaml
        '404':
          description: Not Found
      description: Remove this user from the store
      tags:
        - Users
  /users/self:
    get:
      summary: Get the user
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./user.v1.yaml
      operationId: get-users-self
      description: Get informations about the owner of the access token
  /users/self/assets/recent:
    get:
      summary: Get most recent asset of the user
      tags:
        - Users
        - Assets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./asset.v1.yaml
              examples:
                example-1: {}
      operationId: get-users-self-assets-recent
      description: 'Get the most recent assets published by the owner of the access token. '
components:
  schemas: {}
tags:
  - name: Assets
    description: All about assets.
  - name: Users
    description: All about users.
